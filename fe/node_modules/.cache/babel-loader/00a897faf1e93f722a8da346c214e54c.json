{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\n\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n\n    return supportsPassiveOption;\n  }();\n\n  target.addEventListener(eventName, listener, supportsPassiveOption ? {\n    passive: true\n  } : false);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n};","map":{"version":3,"sources":["C:/Users/Damaris/WebstormProjects/lawrgminer/node_modules/react-scroll/modules/mixins/passive-event-listeners.js"],"names":["Object","defineProperty","exports","value","addPassiveEventListener","target","eventName","listener","supportsPassiveOption","opts","get","window","addEventListener","e","passive","removePassiveEventListener","removeEventListener"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB,GAAGF,OAAO,CAACE,uBAAR,GAAkC,SAASA,uBAAT,CAAiCC,MAAjC,EAAyCC,SAAzC,EAAoDC,QAApD,EAA8D;AAC5H,MAAIC,qBAAqB,GAAG,YAAY;AACtC,QAAIA,qBAAqB,GAAG,KAA5B;;AACA,QAAI;AACF,UAAIC,IAAI,GAAGT,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;AAC9CS,QAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClBF,UAAAA,qBAAqB,GAAG,IAAxB;AACD;AAH6C,OAArC,CAAX;AAKAG,MAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCH,IAAtC;AACD,KAPD,CAOE,OAAOI,CAAP,EAAU,CAAE;;AACd,WAAOL,qBAAP;AACD,GAX2B,EAA5B;;AAYAH,EAAAA,MAAM,CAACO,gBAAP,CAAwBN,SAAxB,EAAmCC,QAAnC,EAA6CC,qBAAqB,GAAG;AAAEM,IAAAA,OAAO,EAAE;AAAX,GAAH,GAAuB,KAAzF;AACD,CAdD;;AAgBA,IAAIC,0BAA0B,GAAGb,OAAO,CAACa,0BAAR,GAAqC,SAASA,0BAAT,CAAoCV,MAApC,EAA4CC,SAA5C,EAAuDC,QAAvD,EAAiE;AACrIF,EAAAA,MAAM,CAACW,mBAAP,CAA2BV,SAA3B,EAAsCC,QAAtC;AACD,CAFD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n * Tell the browser that the event listener won't prevent a scroll.\r\n * Allowing the browser to continue scrolling without having to\r\n * to wait for the listener to return.\r\n */\nvar addPassiveEventListener = exports.addPassiveEventListener = function addPassiveEventListener(target, eventName, listener) {\n  var supportsPassiveOption = function () {\n    var supportsPassiveOption = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          supportsPassiveOption = true;\n        }\n      });\n      window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassiveOption;\n  }();\n  target.addEventListener(eventName, listener, supportsPassiveOption ? { passive: true } : false);\n};\n\nvar removePassiveEventListener = exports.removePassiveEventListener = function removePassiveEventListener(target, eventName, listener) {\n  target.removeEventListener(eventName, listener);\n};"]},"metadata":{},"sourceType":"script"}