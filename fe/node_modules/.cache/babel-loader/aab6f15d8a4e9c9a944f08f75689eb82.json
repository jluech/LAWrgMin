{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /*\r\n   * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)\r\n   */\n  defaultEasing: function defaultEasing(x) {\n    if (x < 0.5) {\n      return Math.pow(x * 2, 2) / 2;\n    }\n\n    return 1 - Math.pow((1 - x) * 2, 2) / 2;\n  },\n\n  /*\r\n   * https://gist.github.com/gre/1650294\r\n   */\n  // no easing, no acceleration\n  linear: function linear(x) {\n    return x;\n  },\n  // accelerating from zero velocity\n  easeInQuad: function easeInQuad(x) {\n    return x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuad: function easeOutQuad(x) {\n    return x * (2 - x);\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: function easeInOutQuad(x) {\n    return x < .5 ? 2 * x * x : -1 + (4 - 2 * x) * x;\n  },\n  // accelerating from zero velocity \n  easeInCubic: function easeInCubic(x) {\n    return x * x * x;\n  },\n  // decelerating to zero velocity π\n  easeOutCubic: function easeOutCubic(x) {\n    return --x * x * x + 1;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutCubic: function easeInOutCubic(x) {\n    return x < .5 ? 4 * x * x * x : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;\n  },\n  // accelerating from zero velocity \n  easeInQuart: function easeInQuart(x) {\n    return x * x * x * x;\n  },\n  // decelerating to zero velocity \n  easeOutQuart: function easeOutQuart(x) {\n    return 1 - --x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: function easeInOutQuart(x) {\n    return x < .5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;\n  },\n  // accelerating from zero velocity\n  easeInQuint: function easeInQuint(x) {\n    return x * x * x * x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuint: function easeOutQuint(x) {\n    return 1 + --x * x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutQuint: function easeInOutQuint(x) {\n    return x < .5 ? 16 * x * x * x * x * x : 1 + 16 * --x * x * x * x * x;\n  }\n};","map":{"version":3,"sources":["C:/Users/Damaris/Documents/Github/LAWrgMiner/node_modules/react-scroll/modules/mixins/smooth.js"],"names":["Object","defineProperty","exports","value","default","defaultEasing","x","Math","pow","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  /*\r\n   * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)\r\n   */\n  defaultEasing: function defaultEasing(x) {\n    if (x < 0.5) {\n      return Math.pow(x * 2, 2) / 2;\n    }\n    return 1 - Math.pow((1 - x) * 2, 2) / 2;\n  },\n  /*\r\n   * https://gist.github.com/gre/1650294\r\n   */\n  // no easing, no acceleration\n  linear: function linear(x) {\n    return x;\n  },\n  // accelerating from zero velocity\n  easeInQuad: function easeInQuad(x) {\n    return x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuad: function easeOutQuad(x) {\n    return x * (2 - x);\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: function easeInOutQuad(x) {\n    return x < .5 ? 2 * x * x : -1 + (4 - 2 * x) * x;\n  },\n  // accelerating from zero velocity \n  easeInCubic: function easeInCubic(x) {\n    return x * x * x;\n  },\n  // decelerating to zero velocity π\n  easeOutCubic: function easeOutCubic(x) {\n    return --x * x * x + 1;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutCubic: function easeInOutCubic(x) {\n    return x < .5 ? 4 * x * x * x : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;\n  },\n  // accelerating from zero velocity \n  easeInQuart: function easeInQuart(x) {\n    return x * x * x * x;\n  },\n  // decelerating to zero velocity \n  easeOutQuart: function easeOutQuart(x) {\n    return 1 - --x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: function easeInOutQuart(x) {\n    return x < .5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;\n  },\n  // accelerating from zero velocity\n  easeInQuint: function easeInQuint(x) {\n    return x * x * x * x * x;\n  },\n  // decelerating to zero velocity\n  easeOutQuint: function easeOutQuint(x) {\n    return 1 + --x * x * x * x * x;\n  },\n  // acceleration until halfway, then deceleration \n  easeInOutQuint: function easeInOutQuint(x) {\n    return x < .5 ? 16 * x * x * x * x * x : 1 + 16 * --x * x * x * x * x;\n  }\n};"]},"metadata":{},"sourceType":"script"}